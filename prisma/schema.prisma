generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  password      String         // Hashed password
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // Relations
  conversations Conversation[]
  posts         Post[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId])
}

model Conversation {
  id         String    @id @default(cuid())
  title      String?
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  isPinned   Boolean   @default(false)
  isArchived Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  messages   Message[]

  @@index([userId])
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  role           String       // 'user' or 'assistant'
  content        String
  imageUrl       String?
  createdAt      DateTime     @default(now())

  @@index([conversationId])
}